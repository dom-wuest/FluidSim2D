#version 450

layout (binding = 0, rgba8 ) uniform writeonly image2D resultImage;

layout (binding = 1) readonly buffer SolidsIn {
    int solids[ ];
};

layout (binding = 2) readonly buffer UIn {
    float u[ ];
};

layout (binding = 3) readonly buffer VIn {
    float v[ ];
};

layout (binding = 4) readonly buffer PIn {
    float pressure[];
};

layout (binding = 5) readonly buffer DyeIn {
    vec4 dye[];
};

layout (push_constant) uniform DisplayPushConstants
{
    uint width;
    uint height;
    uint sim_width;
    uint sim_height;
    vec4 circel;
    uint out_field;
} p;

layout( local_size_x_id = 0) in;
layout( local_size_y_id = 1) in;

#define S_COORD(i,j) (i) + (j) * p.sim_width
#define D_COORD(i,j) (i) + (j) * p.width

float nearest_p(float x, float y){
    // x,y in [0.0,1.0)
    float x_l = floor(x * float(p.sim_width));
    float y_l = floor(y * float(p.sim_height));
    return float(pressure[int(x_l) + p.sim_width * int(y_l)]);
}

float is_fluid(float x, float y){
    float dx = x * float(p.sim_width) - p.circel.x;
    float dy = y * float(p.sim_height) - p.circel.y;
    float fl = 1.0;
    if (dx*dx + dy*dy < (p.circel.z * p.circel.z)){
        fl = 0.0;
    }
    return fl;
}

vec4 sciColor(float val) {
    // val in [0,1)
    vec3 colorMap[] = vec3[](vec3(0.050,0.029,0.527), vec3(0.327,0.006,0.646), vec3(0.545,0.038,0.647), vec3(0.724,0.197,0.537), vec3(0.858,0.359,0.407), vec3(0.955,0.533,0.285), vec3(0.994,0.738,0.167), vec3(1.0,0.940,0.131));

    int idx = int(floor(val * 7.0));
    idx = max(min(idx,6),0);
    float dx = val * 7.0 - float(idx);
    dx = max(min(dx,1.0),0.0);
    vec4 A = vec4(colorMap[idx],1.0);
    vec4 B = vec4(colorMap[idx+1],1.0);
    return mix(A,B, dx);
}

void main(){

    uint gIDx = gl_GlobalInvocationID.x;
    uint gIDy = gl_GlobalInvocationID.y;

    if(gIDx >= p.width || gIDy >= p.height){
        return;
    }

    float x = float(gIDx) / float(p.width);
    float y = float(gIDy) / float(p.height);
    
    vec4 color = vec4(0.0);

    if(p.out_field == 0){
        color = dye[D_COORD(gIDx,gIDy)];
    }
    
    if(p.out_field == 1){
        float press = nearest_p(x, y)+0.2;
        color = sciColor(press);
    }

    if(p.circel.w > 0 && is_fluid(x,y) < 0.5){
        color = vec4(0.0, 0.0, 0.0,1.0);
    }
    
    imageStore( resultImage, ivec2(gl_GlobalInvocationID.xy), color);
}